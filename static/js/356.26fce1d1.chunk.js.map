{"version":3,"file":"static/js/356.26fce1d1.chunk.js","mappings":"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","sources":["webpack://my-project/./src/components/Profile/Profile.module.css?b512","webpack://my-project/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?1f32","components/Profile/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Form.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js","webpack://my-project/./src/components/UI/Buttons.module.css?a27a","components/UI/Buttons.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__6okfN\",\"content__img\":\"Profile_content__img__q8Mja\",\"status\":\"Profile_status__xci-m\",\"container__aboutMe\":\"Profile_container__aboutMe__vAv8X\",\"aboutMe\":\"Profile_aboutMe__BHDHA\",\"contacts\":\"Profile_contacts__UHzh0\",\"link__item\":\"Profile_link__item__TlHla\",\"link\":\"Profile_link__EvpGX\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__SFwQG\",\"edit_mode\":\"ProfileStatus_edit_mode__ngUIS\"};","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\t// hook\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\tlet [status, setStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t},[props.status])\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tif (props.profileId === props.myId) {\r\n\t\t\tsetEditMode( true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\tconst onChangeLocalStatus= (e) => {setStatus(e.currentTarget.value)}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonDoubleClick={activateEditMode}\r\n\t\t\t\t\t\tclassName={styles.status}>\r\n\t\t\t\t\t\t{props.status !== null && props.status !== \"\"\r\n\t\t\t\t\t\t\t? props.status\r\n\t\t\t\t\t\t\t: 'status'}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{editMode &&\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={styles.edit_mode}\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\tvalue={status}\r\n\t\t\t\t\tonChange={onChangeLocalStatus}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from \"../Profile.module.css\";\r\nimport Preloaded from \"../../Preolader/Preloader\";\r\nimport userPhoto from '../../../assets/img/user.jpg';\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, myId}) => {\r\n  if(!profile) {\r\n    return <Preloaded />\r\n  }\r\n  let contacts = Object.entries(profile.contacts).map(p =>\r\n    p[1] !== null && p[1] !== ''\r\n      ? <div className={s.link__item}  key={p[1]}>{p[0]} : <a className={s.link} href={p[1]}>{p[1]}</a></div>\r\n      : '')\r\n    return (\r\n        <div className={s.container__aboutMe}>\r\n\r\n            {/*Аватарка*/}\r\n\r\n            <img src={\r\n              profile.photos.large !== null\r\n                ? profile.photos.large\r\n                : userPhoto\r\n            } alt=\"avatar\"/>\r\n\r\n            {/*Обо мне*/}\r\n\r\n            <div className={s.aboutMe}>\r\n              <h2>\r\n\t              {profile.fullName}\r\n\t              {profile.lookingForAJob\r\n\t\t              ? <span>&#128029;</span>\r\n\t\t              : <span>&#10062;</span>\r\n\t              }\r\n              </h2>\r\n\r\n              {/*Статус*/}\r\n\r\n              <ProfileStatusWithHooks\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                profileId={profile.userId}\r\n                myId={myId}\r\n              />\r\n              {/*Обо мне*/}\r\n              <div className={s.jobs}>\r\n\t              Сведения о работе:\r\n\t              {profile.lookingForAJobDescription !== null\r\n\t\t              ? <div>{profile.lookingForAJobDescription}</div>\r\n\t\t              : <div>Отдыхаю <span>&#9989;</span></div>}\r\n              </div>\r\n\r\n\r\n              {/*Контакты*/}\r\n\r\n                <div className={s.contacts}>\r\n                  Контакты:\r\n                  {contacts}\r\n                </div>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MyPosts_container__tRzsA\",\"myPost\":\"MyPosts_myPost__rYEXz\",\"buttons\":\"MyPosts_buttons__ppwpM\"};","// extracted by mini-css-extract-plugin\nexport default {\"postContaine\":\"Post_postContaine__EXw01\",\"item\":\"Post_item__gdeEW\",\"btn__containe\":\"Post_btn__containe__LOcUB\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {BtnLike} from \"../../../UI/Buttons\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.postContaine}>\r\n            <div className={s.item}>\r\n                <span></span>\r\n                <p>{props.message}</p>\r\n            </div>\r\n            <div className={s.btn__containe}>\r\n                <BtnLike text=\"Like\" />\r\n                <div>{props.likesCount}<span> &#10084;</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport {Formik,Field,Form} from \"formik\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport {Btn} from \"../../UI/Buttons\";\r\n\r\nconst FormNewPost = (props) =>(\r\n      <Formik\r\n      initialValues={{newPostText: ''}}\r\n      onSubmit={(values,{setSubmitting}) => {\r\n        setSubmitting(false)\r\n        props.onAddPost(values.newPostText)\r\n        values.newPostText = ''\r\n        }\r\n      }\r\n      >\r\n       <Form>\r\n         <Field component='textarea' name=\"newPostText\"/>\r\n         <div className={styles.buttons}>\r\n         <Btn text='Add Post'></Btn>\r\n         </div>\r\n       </Form>\r\n      </Formik>\r\n    )\r\n\r\nexport default FormNewPost","import styles from \"./MyPosts.module.css\"\r\nimport React from \"react\";\r\nimport Post from \"./Post/Post\"\r\nimport FormNewPost from \"./Form\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('renderR')\r\n    let onAddPost = (post) => {\r\n        props.addPost(post)\r\n    };\r\n\r\n    let postElement = props.postData\r\n        .map(p => (<Post message={p.message} likesCount={p.like} key={p.id}/>))\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className='color__font__white'>My post</div>\r\n            <div className={styles.myPost}>\r\n                <FormNewPost onAddPost={onAddPost}/>\r\n            </div>\r\n\r\n            <div className={styles.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    )})\r\nexport default MyPosts","import {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePages.postData\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport BgProfile from \"../../static/Bg-profile.jpg\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloaded from \"../Preolader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n          {props.isLoadingProfile ? <Preloaded /> : ''}\r\n            <img className={s.content__img} src={BgProfile} alt=\"img\"/>\r\n            <div className='container'>\r\n                <ProfileInfo\r\n                  profile={props.profile}\r\n                  updateStatus={props.updateStatus}\r\n                  status={props.status}\r\n                  myId={props.myId}\r\n                />\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"../../hoc/withRouter\"\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends  React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId\r\n    if (!userId) {\r\n        userId = this.props.myId\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n//state = getState()\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePages.profile,\r\n    myId: state.auth.userId,\r\n    loading: state.profilePages.isLoadingProfile,\r\n    status: state.profilePages.status\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile,getStatus,\r\n    updateStatus,}),\r\n  withRouter,\r\n  withAuthRedirect,\r\n\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {useLocation, useParams} from \"react-router\";\r\n\r\nexport function withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet location = useLocation();\r\n\t\tlet params = useParams();\r\n\t\treturn (\r\n\t\t\t<Component\r\n\t\t\t\t{...props}\r\n\t\t\t\trouter={{ location, params }}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn ComponentWithRouterProp;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Buttons_button__QhpL5\",\"buttonLike\":\"Buttons_buttonLike__-PBuH\"};","import React from \"react\";\r\nimport s from \"./Buttons.module.css\"\r\n\r\nconst Btn =(props)=> {\r\n    return (\r\n        <button onClick={props.addPost} className={s.button}>{props.text}</button>\r\n    )\r\n}\r\n\r\nconst BtnLike=(props)=> {\r\n    return (\r\n        <button className={s.buttonLike}><span>&#128571;</span>{props.text}</button>\r\n    )\r\n}\r\n\r\nconst BtnAddMessage = (props) => {\r\n    return (\r\n        <button\r\n            className={s.button}\r\n            onClick={props.sendMessage}\r\n        >{props.text}</button>\r\n    )\r\n}\r\n\r\nexport {Btn, BtnLike, BtnAddMessage}","import {Navigate} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif(!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n\t\t\treturn <Component {...this.props}/>;\r\n\t\t}\r\n\t}\r\n\tlet connectAuthRedirectComponent =\r\n\t\tconnect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n\treturn connectAuthRedirectComponent\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","profileId","myId","className","styles","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","profile","contacts","Object","entries","map","p","s","href","src","photos","large","userPhoto","alt","fullName","lookingForAJob","userId","lookingForAJobDescription","message","text","likesCount","initialValues","newPostText","onSubmit","values","setSubmitting","onAddPost","component","name","React","console","log","postElement","postData","like","id","Form","post","addPost","connect","state","profilePages","MyPosts","isLoadingProfile","BgProfile","ProfileContainer","this","router","params","getUserProfile","getStatus","compose","auth","loading","Component","location","useLocation","useParams","withAuthRedirect","Btn","onClick","BtnLike","BtnAddMessage","sendMessage","mapStateToPropsForRedirect","isAuth","RedirectComponent","to"],"sourceRoot":""}